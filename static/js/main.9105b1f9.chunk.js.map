{"version":3,"sources":["components/ErrorBoundary/ErrorBoundary.js","components/Items/Item/Item.js","components/Items/Items.js","containers/App.js","serviceWorker.js","index.js","components/Items/Item/Item.module.css","containers/App.module.css"],"names":["ErrorBoundary","state","hasError","errorMessage","componentDidCatch","error","info","_this","setState","this","react_default","a","createElement","props","children","Component","Item","Card_default","className","classes","TextField_default","label","textField","value","name","onChange","nChanged","type","fullWidth","inputProps","style","textAlign","amount","aChanged","Button_default","size","variant","color","onClick","btnDelete","Delete_default","Items","items","map","item","index","components_ErrorBoundary_ErrorBoundary","key","id","Items_Item_Item","event","nameChanged","amountChanged","btnDeleteEvent","App","JSON","parse","localStorage","getItem","newItemHandler","itemName","itemAmount","Object","toConsumableArray","newItem","length","push","setItem","stringify","nameChangedHandler","itemIndex","findIndex","p","objectSpread","target","amountChangedHandler","deleteItemHandler","splice","_this2","empty","title","components_Items_Items","addButton","Fab_default","Add_default","PureComponent","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.9105b1f9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    hasError: false,\r\n    errorMessage: \"\"\r\n  };\r\n\r\n  componentDidCatch = (error, info) => {\r\n    this.setState({ hasError: true, errorMessage: error });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Algo deu errado...</h1>;\r\n    } else {\r\n      return this.props.children;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from \"react\";\r\nimport classes from \"./Item.module.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst Item = props => {\r\n  return (\r\n    <Card className={classes.Item}>\r\n      <div>\r\n        <div>\r\n          <TextField\r\n            label=\"Produto\"\r\n            className={classes.textField}\r\n            value={props.name}\r\n            onChange={props.nChanged}\r\n            type=\"text\"\r\n            fullWidth={true}\r\n            inputProps={{\r\n              style: { textAlign: \"center\" }\r\n            }}\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <TextField\r\n            label=\"Quantidade/Peso\"\r\n            className={classes.textField}\r\n            value={props.amount}\r\n            onChange={props.aChanged}\r\n            type=\"text\"\r\n            fullWidth={true}\r\n            inputProps={{\r\n              style: { textAlign: \"center\" }\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <div>\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={props.btnDelete}\r\n        >\r\n          Remover\r\n          <DeleteIcon />\r\n        </Button>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport ErrorBoundary from \"../ErrorBoundary/ErrorBoundary\";\r\nimport Item from \"./Item/Item\";\r\n\r\nconst Items = props => {\r\n  return props.items.map((item, index) => {\r\n    return (\r\n      <ErrorBoundary key={item.id}>\r\n        <Item\r\n          name={item.name}\r\n          amount={item.amount}\r\n          key={item.id}\r\n          nChanged={event => props.nameChanged(event, item.id)}\r\n          aChanged={event => props.amountChanged(event, item.id)}\r\n          btnDelete={() => props.btnDeleteEvent(index)}\r\n        />\r\n      </ErrorBoundary>\r\n    );\r\n  });\r\n};\r\n\r\nexport default Items;\r\n","import React, { PureComponent } from \"react\";\nimport classes from \"./App.module.css\";\nimport Items from \"../components/Items/Items\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\n\nclass App extends PureComponent {\n  state = {\n    items: JSON.parse(localStorage.getItem(\"items\")) || []\n  };\n\n  newItemHandler = (itemName, itemAmount) => {\n    const items = [...this.state.items];\n\n    const newItem = {\n      id: items.length,\n      name: itemName,\n      amount: itemAmount\n    };\n\n    items.push(newItem);\n\n    this.setState(\n      {\n        items: items\n      },\n      () => {\n        localStorage.setItem(\"items\", JSON.stringify(this.state.items));\n      }\n    );\n  };\n\n  nameChangedHandler = (event, id) => {\n    const itemIndex = this.state.items.findIndex(p => {\n      return p.id === id;\n    });\n\n    const item = {\n      ...this.state.items[itemIndex]\n    };\n\n    item.name = event.target.value;\n\n    const items = [...this.state.items];\n    items[itemIndex] = item;\n\n    this.setState(\n      {\n        items: items\n      },\n      () => {\n        localStorage.setItem(\"items\", JSON.stringify(this.state.items));\n      }\n    );\n  };\n\n  amountChangedHandler = (event, id) => {\n    const itemIndex = this.state.items.findIndex(p => {\n      return p.id === id;\n    });\n\n    const item = {\n      ...this.state.items[itemIndex]\n    };\n\n    item.amount = event.target.value;\n\n    const items = [...this.state.items];\n    items[itemIndex] = item;\n\n    this.setState(\n      {\n        items: items\n      },\n      () => {\n        localStorage.setItem(\"items\", JSON.stringify(this.state.items));\n      }\n    );\n  };\n\n  deleteItemHandler = itemIndex => {\n    const items = [...this.state.items];\n    items.splice(itemIndex, 1);\n    this.setState({ items: items }, () => {\n      localStorage.setItem(\"items\", JSON.stringify(this.state.items));\n    });\n  };\n\n  render() {\n    let empty = null;\n\n    if (this.state.items.length === 0) {\n      empty = <h4>Sua lista est√° vazia!</h4>;\n    }\n\n    return (\n      <div className={classes.App}>\n        <h2>{this.props.title}</h2>\n        {empty}\n        <Items\n          items={this.state.items}\n          btnDeleteEvent={this.deleteItemHandler}\n          nameChanged={this.nameChangedHandler}\n          amountChanged={this.amountChangedHandler}\n        />\n        <div className={classes.addButton}>\n          <Fab\n            variant=\"extended\"\n            color=\"primary\"\n            onClick={() => this.newItemHandler(\"\", \"\")}\n          >\n            Adicionar Item\n            <AddIcon />\n          </Fab>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <App title=\"Lista de Compras\" />,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"Item_Item__2594l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__tWuoc\",\"addButton\":\"App_addButton__aflCS\"};"],"sourceRoot":""}