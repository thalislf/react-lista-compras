{"version":3,"sources":["components/Items/Items.module.css","components/ErrorBoundary/ErrorBoundary.js","components/Items/Item/Item.js","components/Items/Items.js","store/actions.js","containers/App.js","serviceWorker.js","store/reducer.js","index.js","components/Items/Item/Item.module.css","containers/App.module.css"],"names":["module","exports","addButton","ErrorBoundary","state","hasError","errorMessage","componentDidCatch","error","info","_this","setState","this","react_default","a","createElement","props","children","Component","Item","Card_default","className","classes","TextField_default","label","textField","value","name","onChange","nChanged","type","fullWidth","inputProps","style","textAlign","amount","aChanged","Button_default","size","variant","color","onClick","btnDelete","Delete_default","Items","empty","itm","length","Fab_default","onAddNewItem","Add_default","map","item","components_ErrorBoundary_ErrorBoundary","key","id","Items_Item_Item","event","onItemNameChange","target","onItemAmountChange","onDeleteItem","PureComponent","connect","items","dispatch","itemId","itemName","itemAmount","App","title","components_Items_Items","Boolean","window","location","hostname","match","initialState","JSON","parse","localStorage","getItem","storeItemsInCache","setItem","stringify","reducer","arguments","undefined","action","newState","Object","assign","newItem","Math","random","toString","substr","concat","newItems","filter","itemIndex","findIndex","p","objectSpread","toConsumableArray","store","createStore","ReactDOM","render","es","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b818437e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addButton\":\"Items_addButton__271hN\"};","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    hasError: false,\r\n    errorMessage: \"\"\r\n  };\r\n\r\n  componentDidCatch = (error, info) => {\r\n    this.setState({ hasError: true, errorMessage: error });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Algo deu errado...</h1>;\r\n    } else {\r\n      return this.props.children;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from \"react\";\r\nimport classes from \"./Item.module.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst Item = props => {\r\n  return (\r\n    <Card className={classes.Item}>\r\n      <div>\r\n        <div>\r\n          <TextField\r\n            label=\"Produto\"\r\n            className={classes.textField}\r\n            value={props.name}\r\n            onChange={props.nChanged}\r\n            type=\"text\"\r\n            fullWidth={true}\r\n            inputProps={{\r\n              style: { textAlign: \"center\" }\r\n            }}\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <TextField\r\n            label=\"Quantidade/Peso\"\r\n            className={classes.textField}\r\n            value={props.amount}\r\n            onChange={props.aChanged}\r\n            type=\"text\"\r\n            fullWidth={true}\r\n            inputProps={{\r\n              style: { textAlign: \"center\" }\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <div>\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={props.btnDelete}\r\n        >\r\n          Remover\r\n          <DeleteIcon />\r\n        </Button>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React, { PureComponent } from \"react\";\r\nimport ErrorBoundary from \"../ErrorBoundary/ErrorBoundary\";\r\nimport Item from \"./Item/Item\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../../store/actions\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport classes from \"./Items.module.css\";\r\n\r\nclass Items extends PureComponent {\r\n  render() {\r\n    let empty = null;\r\n\r\n    if (this.props.itm.length === 0) {\r\n      empty = <h4>Sua lista est√° vazia!</h4>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className={classes.addButton}>\r\n          <Fab\r\n            size=\"small\"\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            onClick={this.props.onAddNewItem}\r\n          >\r\n            Adicionar Item\r\n            <AddIcon />\r\n          </Fab>\r\n        </div>\r\n        {empty}\r\n        {this.props.itm.map(item => (\r\n          <ErrorBoundary key={item.id}>\r\n            <Item\r\n              name={item.name}\r\n              amount={item.amount}\r\n              key={item.id}\r\n              nChanged={event =>\r\n                this.props.onItemNameChange(event.target.value, item.id)\r\n              }\r\n              aChanged={event =>\r\n                this.props.onItemAmountChange(event.target.value, item.id)\r\n              }\r\n              btnDelete={() => this.props.onDeleteItem(item.id)}\r\n            />\r\n          </ErrorBoundary>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    itm: state.items\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddNewItem: () => dispatch({ type: actionTypes.NEW_ITEM }),\r\n    onDeleteItem: id => dispatch({ type: actionTypes.DELETE_ITEM, itemId: id }),\r\n    onItemNameChange: (name, id) =>\r\n      dispatch({\r\n        type: actionTypes.UPDATE_ITEM_NAME,\r\n        itemName: name,\r\n        itemId: id\r\n      }),\r\n    onItemAmountChange: (amount, id) =>\r\n      dispatch({\r\n        type: actionTypes.UPDATE_ITEM_AMOUNT,\r\n        itemAmount: amount,\r\n        itemId: id\r\n      })\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Items);\r\n","export const NEW_ITEM = \"NEW_ITEM\";\r\nexport const DELETE_ITEM = \"DELETE_ITEM\";\r\nexport const UPDATE_ITEM_NAME = \"UPDATE_ITEM_NAME\";\r\nexport const UPDATE_ITEM_AMOUNT = \"UPDATE_ITEM_AMOUNT\";\r\n","import React, { PureComponent } from \"react\";\nimport classes from \"./App.module.css\";\nimport Items from \"../components/Items/Items\";\n\nclass App extends PureComponent {\n  render() {\n    return (\n      <div className={classes.App}>\n        <h2>{this.props.title}</h2>\n        <Items />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from \"./actions\";\r\n\r\nconst initialState = {\r\n  items: JSON.parse(localStorage.getItem(\"items\")) || []\r\n};\r\n\r\nconst storeItemsInCache = state => {\r\n  localStorage.setItem(\"items\", JSON.stringify(state.items));\r\n};\r\n\r\nconst uniqueId = function() {\r\n  return (\r\n    \"id-\" +\r\n    Math.random()\r\n      .toString(36)\r\n      .substr(2, 16)\r\n  );\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.NEW_ITEM: {\r\n      let newState = Object.assign({}, state);\r\n\r\n      const newItem = {\r\n        id: uniqueId(),\r\n        name: \"\",\r\n        amount: \"\"\r\n      };\r\n\r\n      newState = {\r\n        items: newState.items.concat(newItem)\r\n      };\r\n\r\n      storeItemsInCache(newState);\r\n\r\n      return newState;\r\n    }\r\n    case actionTypes.DELETE_ITEM: {\r\n      let newState = Object.assign({}, state);\r\n      const newItems = state.items.filter(item => item.id !== action.itemId);\r\n\r\n      newState = {\r\n        items: newItems\r\n      };\r\n\r\n      storeItemsInCache(newState);\r\n\r\n      return newState;\r\n    }\r\n    case actionTypes.UPDATE_ITEM_NAME: {\r\n      let newState = Object.assign({}, state);\r\n      const itemIndex = newState.items.findIndex(p => {\r\n        return p.id === action.itemId;\r\n      });\r\n\r\n      const item = {\r\n        ...newState.items[itemIndex]\r\n      };\r\n\r\n      item.name = action.itemName;\r\n\r\n      const items = [...newState.items];\r\n\r\n      items[itemIndex] = item;\r\n\r\n      newState.items = items;\r\n\r\n      storeItemsInCache(newState);\r\n\r\n      return newState;\r\n    }\r\n    case actionTypes.UPDATE_ITEM_AMOUNT: {\r\n      let newState = Object.assign({}, state);\r\n      const itemIndex = newState.items.findIndex(p => {\r\n        return p.id === action.itemId;\r\n      });\r\n\r\n      const item = {\r\n        ...newState.items[itemIndex]\r\n      };\r\n\r\n      item.amount = action.itemAmount;\r\n\r\n      const items = [...newState.items];\r\n\r\n      items[itemIndex] = item;\r\n\r\n      newState.items = items;\r\n\r\n      storeItemsInCache(newState);\r\n\r\n      return newState;\r\n    }\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\nimport reducer from \"./store/reducer\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App title=\"Lista de Compras\" />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"Item_Item__2594l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__tWuoc\"};"],"sourceRoot":""}